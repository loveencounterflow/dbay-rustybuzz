{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_specials.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-RUSTYBUZZ/_SPECIALS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\nE                         = require './errors'\nSQL                       = String.raw\nguy                       = require 'guy'\n\n\n#===========================================================================================================\n# SPECIALS\n#-----------------------------------------------------------------------------------------------------------\nspecials =\n  missing1:\n    chrs:     ''\n    gid:      -1\n    width:    500\n  missing2:\n    chrs:     ''\n    gid:      -2\n    width:    1000\n  ignored:\n    chrs:     ''\n    gid:      -3\n    marker:   'i'\n    pd:       'M0,-609c-61,0 -111,50 -111,111c0,61 50,111 111,111c61,0 111,-50 111,-111c0,-29 -12,-58 -32,-78c-21,-21 -49,-32 -78,-32zM0,-560c16,0 32,6 43,18c11,11 18,27 18,43c0,34 -27,61 -61,61c-34,0 -61,-27 -61,-61c0,-16 6,-32 18,-43c11,-11 27,-18 43,-18z'\n  spc:\n    chrs:     '\\u{0020}'  # soft space\n    symbolic: '␣'         # U+2423 Open Box\n    gid:      -4\n  wbr:\n    chrs:     '\\u{200b}'  # word break opportunity (as in `foo/bar` with a WBR after the slash)\n    gid:      -5\n    marker:   'w'\n    pd:       \"M0,84l-147,166h293z\"\n  shy:\n    chrs:     '\\u{00ad}'  # soft hyphen\n    gid:      -6\n    marker:   's'\n    pd:       \"M-204,265h178v-802h50v802h178v70h-406z\"\n  hhy:\n    chrs:     '\\u{002d}'  # hard hyphen\n    marker:   'h'\n  nl:\n    chrs:     '\\n'        # manual line break\n    symbolic: '⏎'         # U+23ce Return Symbol\n    gid:      -7\n  missing:\n    chrs:     ''\n    gid:      0\n\n#-----------------------------------------------------------------------------------------------------------\ndo =>\n  #.........................................................................................................\n  seen =\n    gid:        {}\n    chrs:       {}\n    symbolic:   {}\n  #.........................................................................................................\n  for name, d of specials\n    d.name                    = name\n    d.bytecount               = Buffer.byteLength d.chrs\n    d.chrs                   ?= ''\n    d.symbolic               ?= null\n    d.gid                    ?= null\n    #.......................................................................................................\n    if d.gid?\n      if ( entry = seen.gid[ d.gid ] )?\n        throw new E.Dbr_internal_error '^dbr/main@1^', \"GID #{d.gid} already in use for #{rpr entry}, \\\n          can't re-use for #{rpr d}\"\n      seen.gid[ d.gid ]  = d\n    #.......................................................................................................\n    if d.chrs.length > 1\n      if ( entry = seen.chrs[ d.chrs ] )?\n        throw new E.Dbr_internal_error '^dbr/main@1^', \"chrs #{rpr d.chrs} already in use for #{rpr entry}, \\\n          can't re-use for #{rpr d}\"\n      seen.chrs[ d.chrs ] = d\n    #.......................................................................................................\n    if d.symbolic?\n      if ( entry = seen.symbolic[ d.symbolic ] )?\n        throw new E.Dbr_internal_error '^dbr/main@1^', \"symbolic #{rpr d.symbolic} already in use for #{rpr entry}, \\\n          can't re-use for #{rpr d}\"\n      seen.symbolic[ d.symbolic ] = d\n  #.........................................................................................................\n  for _, entry of specials\n    specials[ entry.gid ] = entry\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = guy.lft.freeze { specials, }\n\n\n"
  ]
}